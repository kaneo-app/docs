---
import Layout from "@/layouts/layout.astro";
---

<script is:inline>
  let copied = false;

  const copyToClipboard = (text) => {
    navigator.clipboard.writeText(text);
    copied = true;
    document.getElementById("copy-status").classList.add("text-green-500");
    setTimeout(() => {
      copied = false;
      document.getElementById("copy-status").classList.remove("text-green-500");
    }, 2000);
  };

  export const dockerCompose = `version: '3.8'

services:
  kaneo:
    image: kaneo/kaneo:latest
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/kaneo
      - JWT_SECRET=your-secret-key
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=kaneo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:`;
</script>

<Layout>
  <div class="pt-32 pb-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div
        class="text-center mb-16 opacity-0 transition-all duration-500 animate-in fade-in-up"
      >
        <h1 class="text-4xl font-bold text-zinc-900 dark:text-white mb-4">
          Self-Hosting Guide
        </h1>
        <p class="text-lg text-zinc-600 dark:text-zinc-400 max-w-2xl mx-auto">
          Get Kaneo up and running on your own infrastructure in minutes
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-16">
        <div
          class="bg-gradient-to-br from-blue-500/10 to-purple-500/10 dark:from-blue-500/5 dark:to-purple-500/5 rounded-xl p-6 border border-blue-500/10 dark:border-purple-500/10 opacity-0 transition-all duration-500 animate-in fade-in-up delay-100"
        >
          <div class="h-8 w-8 text-blue-500 dark:text-blue-400 mb-4">üöÄ</div>
          <h3 class="text-lg font-semibold text-zinc-900 dark:text-white mb-2">
            Quick Setup
          </h3>
          <p class="text-zinc-600 dark:text-zinc-400">
            Deploy with a single command using Docker Compose
          </p>
        </div>

        <div
          class="bg-gradient-to-br from-green-500/10 to-emerald-500/10 dark:from-green-500/5 dark:to-emerald-500/5 rounded-xl p-6 border border-green-500/10 dark:border-emerald-500/10 opacity-0 transition-all duration-500 animate-in fade-in-up delay-200"
        >
          <div class="h-8 w-8 text-green-500 dark:text-green-400 mb-4">üõ°Ô∏è</div>
          <h3 class="text-lg font-semibold text-zinc-900 dark:text-white mb-2">
            Secure by Default
          </h3>
          <p class="text-zinc-600 dark:text-zinc-400">
            Built-in security features and best practices
          </p>
        </div>

        <div
          class="bg-gradient-to-br from-orange-500/10 to-red-500/10 dark:from-orange-500/5 dark:to-red-500/5 rounded-xl p-6 border border-orange-500/10 dark:border-red-500/10 opacity-0 transition-all duration-500 animate-in fade-in-up delay-300"
        >
          <div class="h-8 w-8 text-orange-500 dark:text-orange-400 mb-4">
            üíæ
          </div>
          <h3 class="text-lg font-semibold text-zinc-900 dark:text-white mb-2">
            Data Control
          </h3>
          <p class="text-zinc-600 dark:text-zinc-400">
            Full control over your data and infrastructure
          </p>
        </div>
      </div>

      <div class="max-w-4xl mx-auto">
        <div
          class="opacity-0 transition-all duration-500 animate-in fade-in-up delay-400"
        >
          <h2 class="text-2xl font-semibold text-zinc-900 dark:text-white mb-6">
            Quick Start with Docker Compose
          </h2>

          <div class="relative mb-8">
            <div class="absolute top-0 right-0 flex items-center space-x-2 p-4">
              <button
                onclick="copyToClipboard(dockerCompose)"
                class="text-zinc-400 hover:text-zinc-100 transition-colors"
              >
                <span id="copy-status" class="h-5 w-5">üìã</span>
              </button>
            </div>
            <div
              class="flex items-center bg-gradient-to-r from-indigo-500/10 to-purple-500/10 dark:from-indigo-500/5 dark:to-purple-500/5 rounded-t-xl px-4 py-2 border-t border-x border-indigo-500/10 dark:border-purple-500/10"
            >
              <div class="h-4 w-4 text-indigo-500 dark:text-indigo-400 mr-2">
                üíª
              </div>
              <span class="text-sm text-indigo-600 dark:text-indigo-400">
                docker-compose.yml
              </span>
            </div>
            <pre
              class="bg-zinc-900 rounded-b-xl p-4 overflow-x-auto border border-indigo-500/10 dark:border-purple-500/10">
              <code class="text-sm text-zinc-100" />
            </pre>
          </div>

          <div class="space-y-8">
            <div>
              <h3
                class="text-xl font-semibold text-zinc-900 dark:text-white mb-4"
              >
                Starting the Application
              </h3>
              <p class="text-zinc-600 dark:text-zinc-400 mb-4">
                Run the following command in the directory containing your
                docker-compose.yml:
              </p>
              <div
                class="bg-gradient-to-r from-zinc-900 to-zinc-800 rounded-xl p-4"
              >
                <code class="text-sm text-zinc-100">
                  docker compose up -d
                </code>
              </div>
            </div>

            <div>
              <h3
                class="text-xl font-semibold text-zinc-900 dark:text-white mb-4"
              >
                Environment Variables
              </h3>
              <div
                class="bg-gradient-to-r from-amber-500/10 to-orange-500/10 dark:from-amber-500/5 dark:to-orange-500/5 rounded-xl p-6 border border-amber-500/10 dark:border-orange-500/10 mb-6"
              >
                <p class="text-amber-600 dark:text-amber-400">
                  <strong>Important:</strong> Make sure to change the JWT_SECRET
                  and database passwords in production!
                </p>
              </div>
              <div
                class="overflow-hidden rounded-xl border border-zinc-200 dark:border-zinc-800"
              >
                <table class="w-full">
                  <thead>
                    <tr
                      class="bg-gradient-to-r from-zinc-100 to-zinc-50 dark:from-zinc-800 dark:to-zinc-900"
                    >
                      <th class="text-left py-3 px-4">Variable</th>
                      <th class="text-left py-3 px-4">Description</th>
                    </tr>
                  </thead>
                  <tbody class="divide-y divide-zinc-200 dark:divide-zinc-800">
                    <tr class="bg-white dark:bg-zinc-900">
                      <td class="py-3 px-4">
                        <code
                          class="text-sm bg-zinc-100 dark:bg-zinc-800 px-2 py-1 rounded"
                        >
                          DATABASE_URL
                        </code>
                      </td>
                      <td class="py-3 px-4 text-zinc-600 dark:text-zinc-400">
                        PostgreSQL connection string
                      </td>
                    </tr>
                    <tr class="bg-white dark:bg-zinc-900">
                      <td class="py-3 px-4">
                        <code
                          class="text-sm bg-zinc-100 dark:bg-zinc-800 px-2 py-1 rounded"
                        >
                          JWT_SECRET
                        </code>
                      </td>
                      <td class="py-3 px-4 text-zinc-600 dark:text-zinc-400">
                        Secret key for JWT tokens
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>
